package ACC_Module
public
with SHM_DataType;
with ADIRU_errLibrary;

-- ACC_DEVICE 
-- Physical device that produces the acc data that is then
-- sent to ACC_HM. It's output port can propagate erroneous
-- values.
device acc_device
features
    accData : out data port SHM_DataType::accData;
end acc_device;

device implementation acc_device.impl
annex EMV2{**
  use types ADIRU_errLibrary;
  use behavior ADIRU_errLibrary::simple;

  error propagations
    accData : out propagation{ValueErroneous};
  flows
    f1 : error source accData{ValueErroneous} when failed;
  end propagations;
**};
end acc_device.impl;

-- ACC_HM
-- Receives the data from the ACC_DEVICE and checks for erroneous
-- values. In case of an erroneous value being detected it sends
-- an event to the system HM through the errorData port. It only
-- detects the error but does not forbid it to propagate further
-- down the system.
process acc_HM
features
  accData_in : in event data port SHM_DataType::accData;
  accData_out : out event data port SHM_DataType::accData;
  errorData : out event data port SHM_DataType::errorData;
  errorAction : in event data port SHM_DataType::actionData;
end acc_HM;

process implementation acc_HM.impl
annex EMV2{**
  use types ADIRU_errLibrary;
  use behavior ADIRU_errLibrary::simple;
  
  error propagations
    accData_in : in propagation{ValueErroneous};
    accData_out : out propagation{ValueErroneous};
  flows
    f1 : error path accData_in{ValueErroneous} -> accData_out{ValueErroneous};
  end propagations;
  
  component error behavior
  detections
     operational -[1 ormore(accData_in{ValueErroneous})]-> errorData!;
  end component;
**}; 
end acc_HM.impl;

-- ACC_UNIT
-- Is one acc unit containing the physical device ACC_DEVICE
-- and its associated CLHM: ACC_HM. A unit can have different
-- operating modes that are set by the system HM through the
-- to_on, to_off, to_deactivated event ports. Modes are:
--     + OFF .......... power turned OFF, ACC_HM's accData port is
--                      connected to the corresponding output of the 
--                      ACC_UNIT.
--     + ON ........... power turned ON, ACC_HM's accData port is
--                      connected to the corresponding output of the 
--                      ACC_UNIT and data is being sent to the ADIRUs.
--     + DEACTIVATED .. power turned ON, ACC_HM's accData port is not
--                      connected to the corresponding output of the 
--                      ACC_UNIT and therefore no data can be received
--                      by the ADIRUs on that port.
system acc_unit
features
  accData : out data port SHM_DataType::accData;
  errorData : out event data port SHM_DataType::errorData;
  errorAction : in event data port SHM_DataType::actionData;
  to_off : in event port;
  to_on : in event port;
  to_deactivated : in event port;
modes
    off : initial mode; -- Power OFF mode
    on : mode;          -- Power ON and CONNECTED to ADIRU mode
    deactivated : mode; -- Power ON and **NOT** CONNECTED to ADIRU mode
annex behavior_specification {**
    mode transitions
        off -[to_on?]-> on;
        off -[to_deactivated?]-> on;
        on -[to_off?]-> off;
        on -[to_deactivated?]-> off;
        deactivated -[to_on]-> on;
        deactivated -[to_off]-> off;
**};
end acc_unit;

system implementation acc_unit.impl
subcomponents
  acc_device : device acc_device.impl;
  acc_HM : process acc_HM.impl;
connections
  cAccAccHM : port acc_device.accData -> acc_HM.accData_in;

  cAccData : port acc_HM.accData_out -> accData in modes (on);
  cAccHMError : port acc_HM.errorData -> errorData in modes (on,deactivated);
  cAccHMErrorAction : port errorAction -> acc_Hm.errorAction in modes (on,deactivated);
end acc_unit.impl;

-- ACC
-- Is the full acc module containing the 6 accs.
system acc
features
  acc1_data: out data port SHM_DataType::accData;
  acc2_data: out data port SHM_DataType::accData;
  acc3_data: out data port SHM_DataType::accData;
  acc4_data: out data port SHM_DataType::accData;
  acc5_data: out data port SHM_DataType::accData;
  acc6_data: out data port SHM_DataType::accData;
  
  acc1_errorData: out event data port SHM_DataType::errorData;
  acc2_errorData: out event data port SHM_DataType::errorData;
  acc3_errorData: out event data port SHM_DataType::errorData;
  acc4_errorData: out event data port SHM_DataType::errorData;
  acc5_errorData: out event data port SHM_DataType::errorData;
  acc6_errorData: out event data port SHM_DataType::errorData;

  acc1_errorAction: in event data port SHM_DataType::actionData;
  acc2_errorAction: in event data port SHM_DataType::actionData;
  acc3_errorAction: in event data port SHM_DataType::actionData;
  acc4_errorAction: in event data port SHM_DataType::actionData;
  acc5_errorAction: in event data port SHM_DataType::actionData;
  acc6_errorAction: in event data port SHM_DataType::actionData;

  acc1_toOn : in event port;
  acc2_toOn : in event port;
  acc3_toOn : in event port;
  acc4_toOn : in event port;
  acc5_toOn : in event port;
  acc6_toOn : in event port;

  acc1_toOff : in event port;
  acc2_toOff : in event port;
  acc3_toOff : in event port;
  acc4_toOff : in event port;
  acc5_toOff : in event port;
  acc6_toOff : in event port;

  acc1_toDeactivated : in event port;
  acc2_toDeactivated : in event port;
  acc3_toDeactivated : in event port;
  acc4_toDeactivated : in event port;
  acc5_toDeactivated : in event port;
  acc6_toDeactivated : in event port;
end acc;

system implementation acc.impl
subcomponents
    acc1 : system acc_unit.impl;
    acc2 : system acc_unit.impl;
    acc3 : system acc_unit.impl;
    acc4 : system acc_unit.impl;
    acc5 : system acc_unit.impl;
    acc6 : system acc_unit.impl;
connections
    cAcc1 : port acc1.accData -> acc1_data;
    cAcc2 : port acc2.accData -> acc2_data;
    cAcc3 : port acc3.accData -> acc3_data;
    cAcc4 : port acc4.accData -> acc4_data;
    cAcc5 : port acc5.accData -> acc5_data;
    cAcc6 : port acc6.accData -> acc6_data;
    
    cAcc1errorData : port acc1.errorData -> acc1_errorData;
    cAcc2errorData : port acc2.errorData -> acc2_errorData;
    cAcc3errorData : port acc3.errorData -> acc3_errorData;
    cAcc4errorData : port acc4.errorData -> acc4_errorData;
    cAcc5errorData : port acc5.errorData -> acc5_errorData;
    cAcc6errorData : port acc6.errorData -> acc6_errorData;

    cAcc1errorAction : port acc1_errorAction -> acc1.errorAction;
    cAcc2errorAction : port acc2_errorAction -> acc2.errorAction;
    cAcc3errorAction : port acc3_errorAction -> acc3.errorAction;
    cAcc4errorAction : port acc4_errorAction -> acc4.errorAction;
    cAcc5errorAction : port acc5_errorAction -> acc5.errorAction;
    cAcc6errorAction : port acc6_errorAction -> acc6.errorAction;

    cAcc1ToOn : port acc1_toOn -> acc1.to_on;
    cAcc2ToOn : port acc2_toOn -> acc2.to_on;
    cAcc3ToOn : port acc3_toOn -> acc3.to_on;
    cAcc4ToOn : port acc4_toOn -> acc4.to_on;
    cAcc5ToOn : port acc5_toOn -> acc5.to_on;
    cAcc6ToOn : port acc6_toOn -> acc6.to_on;

    cAcc1ToOff : port acc1_toOff -> acc1.to_off;
    cAcc2ToOff : port acc2_toOff -> acc2.to_off;
    cAcc3ToOff : port acc3_toOff -> acc3.to_off;
    cAcc4ToOff : port acc4_toOff -> acc4.to_off;
    cAcc5ToOff : port acc5_toOff -> acc5.to_off;
    cAcc6ToOff : port acc6_toOff -> acc6.to_off;

    cAcc1ToDeactivated : port acc1_toDeactivated -> acc1.to_deactivated;
    cAcc2ToDeactivated : port acc2_toDeactivated -> acc2.to_deactivated;
    cAcc3ToDeactivated : port acc3_toDeactivated -> acc3.to_deactivated;
    cAcc4ToDeactivated : port acc4_toDeactivated -> acc4.to_deactivated;
    cAcc5ToDeactivated : port acc5_toDeactivated -> acc5.to_deactivated;
    cAcc6ToDeactivated : port acc6_toDeactivated -> acc6.to_deactivated;
end acc.impl;

end ACC_Module;

