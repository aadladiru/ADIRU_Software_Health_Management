package ADIRUp_Module
public
with ARINC653;
with SHM_DataType;
with SEI;
with Memory_Properties;
with ADIRU_errLibrary;

system ADIRU_processor
features
  acc_input1: in data port SHM_DataType::accData;
  acc_input2: in data port SHM_DataType::accData;
  acc_input3: in data port SHM_DataType::accData;
  acc_input4: in data port SHM_DataType::accData;
  acc_input5: in data port SHM_DataType::accData;
  acc_input6: in data port SHM_DataType::accData;
  ADIRU1_output: out data port SHM_DataType::accData;
  ADIRU2_output: out data port SHM_DataType::accData;
  ADIRU3_output: out data port SHM_DataType::accData;
  ADIRU4_output: out data port SHM_DataType::accData;
  
  ADIRU_error_out: out event data port SHM_DataType::errorData;
  ADIRU_error_action: in event data port SHM_DataType::actionData;

annex EMV2{**
  use types ADIRU_errLibrary;
  use behavior ADIRU_errLibrary::ADIRUp_simple;
  
  error propagations
    acc_input5 : in propagation{ValueError}:
    acc_input6 : in propagation{ValueError}:
    ADIRU1_output: out propagation{ValueError};
    ADIRU2_output: out propagation{ValueError};
    ADIRU3_output: out propagation{ValueError}; 
    ADIRU4_output: out propagation{ValueError};
    ADIRU_error_action: in propagation{DoNotUseAcc};
  flows
    f5 : error sink acc_input5{ValueError};
    f6 : error sink acc_input6{ValueError};
    fa : error sink ADIRU_error_action {DoNotUseAcc};
  end propagations;

  component error behavior
  transitions
    t1 : operational -[ADIRU_error_action{DoNotUseAcc5}]-> useAllButAcc5; 
    t2 : operational -[ADIRU_error_action{DoNotUseAcc6}]-> useAllButAcc6; 
    t3 : operational -[ADIRU_error_action{DoNotUseAcc56}]-> useAllButAcc56; 
    t4 : useAllButAcc6 -[ADIRU_error_action{DoNotUseAcc5}]-> useAllButAcc5;
    t5 : useAllButAcc5 -[ADIRU_error_action{DoNotUseAcc6}]-> useAllButAcc6;
    t6 : useAllButAcc5 -[ADIRU_error_action{DoNotUseAcc56}]-> useAllButAcc56;
    t7 : useAllButAcc6 -[ADIRU_error_action{DoNotUseAcc56}]-> useAllButAcc56;
  propagations
    p_op_acc5_1 : operational -[acc_input5{ValueError}]-> ADIRU1_output{ValueError};
    p_op_acc5_2 : operational -[acc_input5{ValueError}]-> ADIRU2_output{ValueError};
    p_op_acc5_3 : operational -[acc_input5{ValueError}]-> ADIRU3_output{ValueError};
    p_op_acc5_4 : operational -[acc_input5{ValueError}]-> ADIRU4_output{ValueError};
    p_op_acc6_1 : operational -[acc_input6{ValueError}]-> ADIRU1_output{ValueError};
    p_op_acc6_2 : operational -[acc_input6{ValueError}]-> ADIRU2_output{ValueError};
    p_op_acc6_3 : operational -[acc_input6{ValueError}]-> ADIRU3_output{ValueError};
    p_op_acc6_4 : operational -[acc_input6{ValueError}]-> ADIRU4_output{ValueError};

    p_not5_1 : UseAllButAcc5 -[acc_input6{ValueError}]-> ADIRU1_output{ValueError};
    p_not5_2 : UseAllButAcc5 -[acc_input6{ValueError}]-> ADIRU2_output{ValueError};
    p_not5_3 : UseAllButAcc5 -[acc_input6{ValueError}]-> ADIRU3_output{ValueError};
    p_not5_4 : UseAllButAcc5 -[acc_input6{ValueError}]-> ADIRU4_output{ValueError};
    p_not6_1 : UseAllButAcc6 -[acc_input5{ValueError}]-> ADIRU1_output{ValueError};
    p_not6_2 : UseAllButAcc6 -[acc_input5{ValueError}]-> ADIRU2_output{ValueError};
    p_not6_3 : UseAllButAcc6 -[acc_input5{ValueError}]-> ADIRU3_output{ValueError};
    p_not6_4 : UseAllButAcc6 -[acc_input5{ValueError}]-> ADIRU4_output{ValueError};
  end component;
**};
end ADIRU_processor;

system implementation ADIRU_processor.impl
end ADIRU_processor.impl;

end ADIRUp_Module;
